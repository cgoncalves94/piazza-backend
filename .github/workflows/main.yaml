# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Build and Deploy
on:
  push:
    branches:
      - 'master'
  release:
    types: [created]

jobs:
  setup-build-publish-deploy:
    name: Setup, Build and Deploy
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: cloud-class-401116
      INSTANCE_ZONE: us-central1-a
      INSTANCE_NAME: piazza-app-instance
      IMAGE_NAME: piazza-app-image
      CONTAINER_NAME: piazza-app-container
      GITHUB_REPO_URL_WITH_TOKEN: "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"

    

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Config authentication to Google Cloud
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_TF_SA_CREDS_BASE64 }}

      # Set up Cloud SDK
      - id: gcloud-setup
        uses: google-github-actions/setup-gcloud@v0

      # Build the Docker image
      - name: Build and deploy to Compute Engine
        run: |-
          gcloud --quiet compute ssh ${{ env.INSTANCE_NAME }} --project=${{ env.PROJECT_ID }} --zone=${{ env.INSTANCE_ZONE }} --command \
          'sudo docker rm -f ${{ env.CONTAINER_NAME }} || true; \
          rm -rf node-app-dir && git clone $GITHUB_REPO_URL_WITH_TOKEN node-app-dir && cd node-app-dir; \
          sudo docker build --build-arg DB_CONNECTOR=${{ secrets.DB_CONNECTOR }} --build-arg TOKEN_SECRET=${{ secrets.TOKEN_SECRET }} -t ${{ env.IMAGE_NAME }}:latest . ; \
          sudo docker run -d --name ${{ env.CONTAINER_NAME }} --publish 80:3000 ${{ env.IMAGE_NAME }}:latest'

